
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##e020_read_unpaired_data.r
> ##2014-06-04 dmontaner@cipf.es
> ##Collecting miRNA data from The Cancer Genome Atlas
> ##Reading data UNpaired data
> 
> date ()
[1] "Fri Jun  6 20:08:06 2014"
> Sys.info ()[c("nodename", "user")]
   nodename        user 
     "dlap" "dmontaner" 
> commandArgs ()
[1] "/usr/local/lib64/R/bin/exec/R"                                                       
[2] "-f"                                                                                  
[3] "/home/dmontaner/trabajos_mios/2014/mirna_gsa_total/scripts/e020_read_unpaired_data.r"
[4] "--restore"                                                                           
[5] "--save"                                                                              
[6] "--no-readline"                                                                       
[7] "--no-save"                                                                           
[8] "--no-restore"                                                                        
> rm (list = ls ())
> R.version.string ##"R version 3.1.0 (2014-04-10)"
[1] "R version 3.1.0 (2014-04-10)"
> #library (); packageDescription ("", fields = "Version") #
> 
> try (source (".job.r")); try (.job)

.job.r has been sourced

$name
[1] "mirna_gsa_total"

$dir
$dir$data
[1] "~/datos/2014/mirna_gsa_total"

$dir$code
[1] "~/trabajos_mios/2014/mirna_gsa_total"

$dir$scripts
[1] "~/trabajos_mios/2014/mirna_gsa_total/scripts"

$dir$docs
[1] "~/trabajos_mios/2014/mirna_gsa_total/documents"

$dir$rawdat
[1] "~/datos/2014/mirna_gsa_total/data_raw"

$dir$annotation
[1] "~/datos/2014/mirna_gsa_total/data_annotation"

$dir$proces
[1] "~/datos/2014/mirna_gsa_total/data_processed"

$dir$plots
[1] "~/datos/2014/mirna_gsa_total/results/plots"

$dir$res
[1] "~/datos/2014/mirna_gsa_total/results/files"


$testmode
[1] FALSE

$dec
[1] "."

$idsep
[1] " /// "

> 
> options (width = 200)
> 
> ###DATOS
> load (file.path (.job$dir$proces, "sample_info_unpaired.RData"))
> ls ()
[1] "sinfos"
> 
> tags <- names (sinfos)
> TAGS <- toupper (tags)
> names (TAGS) <- tags
> tags
 [1] "blca" "brca" "cesc" "coad" "esca" "hnsc" "kich" "kirc" "kirp" "lihc" "luad" "lusc" "paad" "pcpg" "prad" "read" "skcm" "stad" "thca" "ucec"
> TAGS
  blca   brca   cesc   coad   esca   hnsc   kich   kirc   kirp   lihc   luad   lusc   paad   pcpg   prad   read   skcm   stad   thca   ucec 
"BLCA" "BRCA" "CESC" "COAD" "ESCA" "HNSC" "KICH" "KIRC" "KIRP" "LIHC" "LUAD" "LUSC" "PAAD" "PCPG" "PRAD" "READ" "SKCM" "STAD" "THCA" "UCEC" 
> 
> ################################################################################
> 
> tag <- "blca"
> 
> datos <- list ()
> for (tag in tags) {
+     cat ("\n=============== ", TAGS[tag], " ===============\n")
+     sinfo <- sinfos[[tag]]
+     conteos <- list ()
+ 
+     sinfo[,"fichero"] <- sinfo[,"File.Name.isoform"]  ## to reuse the paired samples code
+     sinfo[,"sample"]  <- sinfo[,"Sample"]
+     
+     ## Reading files
+     for (i in 1:nrow (sinfo)) {
+         fichero <- file.path (sinfo[i,"path"], sinfo[i,"fichero"])
+         dat <- read.table (fichero, header = TRUE, sep = "\t", quote = "", as.is = TRUE)
+         dat[1:3,]
+         
+         touse <- grep (",", dat$miRNA_region)
+         malo <- setdiff (1:nrow (dat), touse)
+         ##print (table (dat[malo, "miRNA_region"]))
+         
+         dat <- dat[touse,]
+         dat[,"ID"] <- sub ("mature,", "", dat$miRNA_region)
+         dat[,"ID"] <- sub ("star,",   "", dat[,"ID"])
+         res.by <- by (dat$read_count, dat$ID, sum)
+         
+         conteos[[sinfo[i, "sample"]]] <- unlist (as.list (res.by))
+     }
+     ## t (sapply (conteos, summary)) ## minimum number of counts is 1
+     
+     ## MATRIX format
+     misIDs <- unique (unlist (lapply (conteos, names)))
+     length (misIDs)
+     misIDs[1:3]
+     
+     contmat <- matrix (NA, nrow = length (misIDs), ncol = length (conteos))
+     rownames (contmat) <- misIDs
+     colnames (contmat) <- names (conteos)
+     ##
+     for (id in names (conteos)) {
+         ##print (id)
+         contmat[,id] <- conteos[[id]][misIDs]
+     }
+     summary (contmat)
+     contmat[is.na (contmat)] <- 0
+     summary (contmat)
+ 
+     if (any (colnames (contmat) != rownames (sinfo))) stop ("PROBLEMA 1")
+ 
+     ## FILTERING:
+     ## Use those miRNAs having more than 10 counts in any sample
+     ## or a sum big enough:
+     ## higher than 50 or 
+     ## higher than half the number of samples
+     ## (ie. on average a count in cases or in controls)
+     maxi <- apply (contmat, 1, max)
+     touse.maxi <- maxi > 10
+     ##
+     sumas <- rowSums (contmat)
+     touse.sumas <- sumas > min (50, ncol (contmat) / 2)
+     ##
+     print (table (touse.sumas, touse.maxi))
+     ##
+     touse <- touse.sumas | touse.maxi
+     table (touse)
+     ##
+     contmat <- contmat[touse,]
+     ##
+     table (colnames (contmat) == rownames (sinfo))
+ 
+     if (any (colnames (contmat) != rownames (sinfo))) stop ("PROBLEMA 1")
+     
+     ## store
+     datos[[tag]] <- list (contmat = contmat, sinfo = sinfo)
+ }

===============  BLCA  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   214   10
      TRUE     91  717

===============  BRCA  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   203    1
      TRUE    136  703

===============  CESC  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   244   11
      TRUE     93  682

===============  COAD  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   287   12
      TRUE     99  616

===============  ESCA  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   290   12
      TRUE     68  613

===============  HNSC  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   205    2
      TRUE    141  706

===============  KICH  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   291   18
      TRUE     88  556

===============  KIRC  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   294    6
      TRUE     98  579

===============  KIRP  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   287   15
      TRUE    115  648

===============  LIHC  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   212    7
      TRUE     99  699

===============  LUAD  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   185    4
      TRUE     99  746

===============  LUSC  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   191    5
      TRUE    105  736

===============  PAAD  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   308    6
      TRUE     92  543

===============  PCPG  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   254    6
      TRUE    121  594

===============  PRAD  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   309    6
      TRUE     95  508

===============  READ  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   319   12
      TRUE     62  573

===============  SKCM  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   247   17
      TRUE     78  637

===============  STAD  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   203    5
      TRUE    113  698

===============  THCA  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   216    2
      TRUE    149  675

===============  UCEC  ===============
           touse.maxi
touse.sumas FALSE TRUE
      FALSE   171    2
      TRUE    105  767
> 
> names (datos)
 [1] "blca" "brca" "cesc" "coad" "esca" "hnsc" "kich" "kirc" "kirp" "lihc" "luad" "lusc" "paad" "pcpg" "prad" "read" "skcm" "stad" "thca" "ucec"
> sapply (datos, names)
     blca      brca      cesc      coad      esca      hnsc      kich      kirc      kirp      lihc      luad      lusc      paad      pcpg      prad      read      skcm      stad      thca     
[1,] "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat" "contmat"
[2,] "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"   "sinfo"  
     ucec     
[1,] "contmat"
[2,] "sinfo"  
> 
> t (sapply (datos, function (x) dim (x$contmat)))
     [,1] [,2]
blca  818  271
brca  840  807
cesc  786  218
coad  727  243
esca  693  113
hnsc  849  519
kich  662   91
kirc  683  311
kirp  778  245
lihc  805  283
luad  849  474
lusc  846  376
paad  641  100
pcpg  721  182
prad  609  117
read  647   93
skcm  732   75
stad  816  345
thca  826  558
ucec  874  418
> 
> 
> ###SALVAMOS
> save (list = "datos", file = file.path (.job$dir$proces, "datos_unpaired.RData"))
> 
> ###EXIT
> warnings ()
NULL
> sessionInfo ()
R version 3.1.0 (2014-04-10)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=es_ES.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=es_ES.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=es_ES.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=es_ES.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     
> q ("no")
> proc.time()
   user  system elapsed 
313.281   1.226 326.779 
