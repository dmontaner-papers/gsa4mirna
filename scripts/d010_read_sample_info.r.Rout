
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##d010_read_sample_info.r
> ##2014-05-23 dmontaner@cipf.es
> ##Collecting miRNA data from The Cancer Genome Atlas
> ##This script organizes all sample information
> 
> date ()
[1] "Fri Jun  6 20:07:02 2014"
> Sys.info ()[c("nodename", "user")]
   nodename        user 
     "dlap" "dmontaner" 
> commandArgs ()
[1] "/usr/local/lib64/R/bin/exec/R"                                                     
[2] "-f"                                                                                
[3] "/home/dmontaner/trabajos_mios/2014/mirna_gsa_total/scripts/d010_read_sample_info.r"
[4] "--restore"                                                                         
[5] "--save"                                                                            
[6] "--no-readline"                                                                     
[7] "--no-save"                                                                         
[8] "--no-restore"                                                                      
> rm (list = ls ())
> R.version.string ##"R version 3.1.0 (2014-04-10)"
[1] "R version 3.1.0 (2014-04-10)"
> #library (); packageDescription ("", fields = "Version") #
> 
> try (source (".job.r")); try (.job)

.job.r has been sourced

$name
[1] "mirna_gsa_total"

$dir
$dir$data
[1] "~/datos/2014/mirna_gsa_total"

$dir$code
[1] "~/trabajos_mios/2014/mirna_gsa_total"

$dir$scripts
[1] "~/trabajos_mios/2014/mirna_gsa_total/scripts"

$dir$docs
[1] "~/trabajos_mios/2014/mirna_gsa_total/documents"

$dir$rawdat
[1] "~/datos/2014/mirna_gsa_total/data_raw"

$dir$annotation
[1] "~/datos/2014/mirna_gsa_total/data_annotation"

$dir$proces
[1] "~/datos/2014/mirna_gsa_total/data_processed"

$dir$plots
[1] "~/datos/2014/mirna_gsa_total/results/plots"

$dir$res
[1] "~/datos/2014/mirna_gsa_total/results/files"


$testmode
[1] FALSE

$dec
[1] "."

$idsep
[1] " /// "

> 
> options (width = 200)
> 
> 
> ## FUNCTION
> barcode2 <- function (bc, to = "sample") {
+     y <- sapply (bc, strsplit, split = "-")
+     lon <- sapply (y, length)
+     L <- unique (lon)
+     if (length (L) != 1) stop ("unequal pa terns")
+     mat <- matrix (unlist (y), ncol = L, byrow = TRUE)
+     sample.number <- substr (mat[,4], start = 1, stop = 2)
+     if (to == "sample") {
+         res  <- paste (mat[,1], mat[,2], mat[,3], sample.number, sep = "-")
+     } else { ##patient
+         res <- paste (mat[,1], mat[,2], mat[,3], sep = "-")
+     }
+     return (res)
+ }
> 
> 
> ###DATOS
> setwd (.job$dir$raw)
> TAGS <- dir ()
> tags <- tolower (TAGS)
> names (TAGS) <- tags
> tags
 [1] "acc"  "blca" "brca" "cesc" "coad" "dlbc" "esca" "hnsc" "kich" "kirc" "kirp" "laml" "lgg"  "lihc" "luad" "lusc" "meso" "ov"   "paad" "pcpg" "prad" "read" "sarc" "skcm" "stad" "thca" "ucec" "ucs" 
> TAGS
   acc   blca   brca   cesc   coad   dlbc   esca   hnsc   kich   kirc   kirp   laml    lgg   lihc   luad   lusc   meso     ov   paad   pcpg   prad   read   sarc   skcm   stad   thca   ucec    ucs 
 "ACC" "BLCA" "BRCA" "CESC" "COAD" "DLBC" "ESCA" "HNSC" "KICH" "KIRC" "KIRP" "LAML"  "LGG" "LIHC" "LUAD" "LUSC" "MESO"   "OV" "PAAD" "PCPG" "PRAD" "READ" "SARC" "SKCM" "STAD" "THCA" "UCEC"  "UCS" 
> 
> tag <- "blca"
> 
> ################################################################################
> ## File Info: information about the files available
> ################################################################################
> sinfos <- list ()
> for (tag in tags) {
+     cat ("\n=============== ", TAGS[tag], " ===============\n")
+     
+     ## READ FILE NAMES
+     finfo <- read.table (file.path (.job$dir$rawdat, TAGS[tag], "file_manifest.txt"), header = TRUE, sep = "\t", quote = "", as.is = TRUE)
+     ## eliminate duplicated lines (just in case)
+     finfo <- unique (finfo)
+     ## keep just miRNA files
+     finfo <- finfo[grep ("miRNASeq", finfo$Platform.Type),]  
+     ## separate isoform and mirna files
+     finfo.i <- finfo[grep ("isoform", finfo$File.Name),]
+     finfo.m <- finfo[grep ("mirna",   finfo$File.Name),]
+     ## common columns
+     comcol <- colnames (finfo) != "File.Name"
+     if (any (finfo.i[,comcol] != finfo.m[,comcol])) stop ("Differences in isoform and mirna files")
+     ## reshape data to single lines
+     finfo <- cbind (finfo.i[,comcol], File.Name.isoform = finfo.i[,"File.Name"], File.Name.mirna = finfo.m[,"File.Name"], stringsAsFactors = FALSE)
+     finfo[1:3,]
+     
+     ## READ SAMPLE DATA
+     fichero <- file.path (.job$dir$rawdat, TAGS[tag], "Clinical", "Biotab", paste0 ("nationwidechildrens.org_biospecimen_sample_", tag, ".txt"))
+     ## format col names
+     columnas <- read.table (fichero, header = FALSE, sep = "\t", quote = "", colClasses = "character", nrow = 1)
+     columnas <- unlist (columnas, use.names = FALSE)
+     columnas <- make.names (columnas)
+     ## read data
+     sinfo <- read.table (fichero, header = TRUE, sep = "\t", quote = "", as.is = TRUE, na.strings = "[Not Available]", skip = 1)
+     ## rename columns
+     if (colnames (sinfo)[1] == "CDE_ID.2673864") {
+         colnames (sinfo) <- columnas
+     } else {
+         stop ("The file does not have a second row of colnames")
+     }
+     ## eliminate duplicated lines (just in case)
+     sinfo <- unique (sinfo)
+     ## include sample and patient
+     sinfo[,"Sample"]  <- barcode2 (sinfo$bcr_sample_barcode, to = "sample")
+     sinfo[,"patient"] <- barcode2 (sinfo$bcr_sample_barcode, to = "patient")
+     ## keep just sample and type information
+     dim (sinfo)
+     sinfo <- unique (sinfo[,c("Sample", "patient", "sample_type")])
+     dim (sinfo)
+     
+     ## MERGE
+     if (!all (table (finfo[,"Sample"] %in% sinfo[,"Sample"]))) stop ("Some files are not reported in the biospecimen sample file")
+     sinfo <- merge (sinfo, finfo, all = TRUE, sort = TRUE, stringsAsFactors = FALSE) ##sort: logical.  Should the result be sorted on the ‘by’ columns?
+ 
+     ## path
+     sinfo[,"path"] <- file.path (.job$dir$raw, TAGS[tag], "miRNASeq", paste0 ("BCGSC__", sinfo$Platform), "Level_3")
+     sinfo[is.na (sinfo$Platform), "path"] <- NA
+     
+     ## STORE DATA
+     sinfos[[tag]] <- sinfo
+ }

===============  ACC  ===============

===============  BLCA  ===============

===============  BRCA  ===============

===============  CESC  ===============

===============  COAD  ===============

===============  DLBC  ===============

===============  ESCA  ===============

===============  HNSC  ===============

===============  KICH  ===============

===============  KIRC  ===============

===============  KIRP  ===============

===============  LAML  ===============

===============  LGG  ===============

===============  LIHC  ===============

===============  LUAD  ===============

===============  LUSC  ===============

===============  MESO  ===============

===============  OV  ===============

===============  PAAD  ===============

===============  PCPG  ===============

===============  PRAD  ===============

===============  READ  ===============

===============  SARC  ===============

===============  SKCM  ===============

===============  STAD  ===============

===============  THCA  ===============

===============  UCEC  ===============

===============  UCS  ===============
> 
> 
> ###SALVAMOS
> save (list = "sinfos", file = file.path (.job$dir$proces, "sample_info_all.RData"))
> 
> 
> ###EXIT
> warnings ()
NULL
> sessionInfo ()
R version 3.1.0 (2014-04-10)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=es_ES.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=es_ES.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=es_ES.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=es_ES.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     
> q ("no")
> proc.time()
   user  system elapsed 
  1.967   0.026   2.533 
