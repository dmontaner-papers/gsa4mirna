
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##i010_explore_res_uvgsa_paired.r
> ##2014-11-26 dmontaner@cipf.es
> ##Analysis of the miRNA data from The Cancer Genome Atlas
> ##This script explores the GSA ressults
> 
> ###NOTES:
> ## Gene Set "evidence" is not related to Block Size
> 
> date ()
[1] "Tue Feb 17 23:38:13 2015"
> Sys.info ()[c("nodename", "user")]
   nodename        user 
      "lap" "dmontaner" 
> commandArgs ()
[1] "/usr/lib/R/bin/exec/R"                                                               
[2] "-f"                                                                                  
[3] "/home/dmontaner/trabajos_mios/2014/gsa4mirna/scripts/i020_explore_res_uvgsa_paired.r"
[4] "--restore"                                                                           
[5] "--save"                                                                              
[6] "--no-readline"                                                                       
[7] "--no-save"                                                                           
[8] "--no-restore"                                                                        
> rm (list = ls ())
> R.version.string ##"R version 3.0.2 (2013-09-25)"
[1] "R version 3.1.2 (2014-10-31)"
> #library (xlsx); packageDescription ("xlsx", fields = "Version") #"0.5.5"
> library (mdgsa); packageDescription ("mdgsa", fields = "Version") #"0.99.2"
Loading required package: DBI
Loading required package: AnnotationDbi
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following object is masked from ‘package:stats’:

    xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, as.vector, cbind, colnames,
    do.call, duplicated, eval, evalq, Filter, Find, get, intersect,
    is.unsorted, lapply, Map, mapply, match, mget, order, paste, pmax,
    pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rep.int,
    rownames, sapply, setdiff, sort, table, tapply, union, unique,
    unlist, unsplit

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: GenomeInfoDb
Loading required package: S4Vectors
Loading required package: IRanges

Attaching package: ‘AnnotationDbi’

The following object is masked from ‘package:GenomeInfoDb’:

    species



KEGG.db contains mappings based on older data because the original
  resource was removed from the the public domain before the most
  recent update was produced. This package should now be considered
  deprecated and future versions of Bioconductor may not have it
  available.  Users who want more current data are encouraged to look
  at the KEGGREST or reactome.db packages

[1] "0.99.2"
> library (ellipse); packageDescription ("ellipse", fields = "Version") #"0.3-8"
[1] "0.3-8"
> #library (mirbaseID); packageDescription ("mirbaseID", fields = "Version") #"0.0.2"
> #help (package = mdgsa)
> #help (package = mirbaseID)
> 
> try (source (".job.r")); try (.job)

.job.r has been sourced

$name
[1] "gsa4mirna"

$dir
$dir$data
[1] "~/datos/2014/gsa4mirna"

$dir$code
[1] "~/trabajos_mios/2014/gsa4mirna"

$dir$scripts
[1] "~/trabajos_mios/2014/gsa4mirna/scripts"

$dir$docs
[1] "~/trabajos_mios/2014/gsa4mirna/documents"

$dir$rawdat
[1] "~/datos/2014/gsa4mirna/data_raw"

$dir$annotation
[1] "~/datos/2014/gsa4mirna/data_annotation"

$dir$proces
[1] "~/datos/2014/gsa4mirna/data_processed"

$dir$plots
[1] "~/datos/2014/gsa4mirna/results/plots"

$dir$res
[1] "~/datos/2014/gsa4mirna/results/files"


$testmode
[1] FALSE

$dec
[1] "."

$idsep
[1] " /// "

> 
> options (width = 170)
> #options (width = 250)
> 
> corte <- 0.05
> 
> ontologias <- c ("bp", "cc", "mf")
> 
> ## DATOS
> load (file.path (.job$dir$proces, "res_gsa_paired.RData"))
> ls ()
[1] "corte"        "mat.gsa.pair" "ontologias"   "res.gsa.pair"
> names (mat.gsa.pair)
[1] "bp"   "cc"   "mf"   "tags" "TAGS" "desc"
> 
> por <- 1
> 
> graphics.off ()
> setwd (.job$dir$plots)
> 
> ## Size dependencies
> for (tag in mat.gsa.pair[["tags"]]) {
+     print (tag)
+     fichero.png <- paste0 ("paired_size_effect_", tag, ".png")
+     png (filename = fichero.png, width = por * 480 * 3, height = por * 480 *2)
+     par (mfcol = c(2, 3))
+     for (onto in ontologias) {
+         ## PLOT
+         plot (log (mat.gsa.pair[[onto]][["N"]]), mat.gsa.pair[[onto]][["pval"]][,tag],  xlab = "block size (log scale)", ylab = "p-value",              main = paste0 (toupper (tag), " (", onto, ")"), cex.lab = 2, cex.main = 2)
+         plot (log (mat.gsa.pair[[onto]][["N"]]), mat.gsa.pair[[onto]][["index"]][,tag], xlab = "block size (log scale)", ylab = "-log pval * sign lor", main = paste0 (toupper (tag), " (", onto, ")"), cex.lab = 2, cex.main = 2)
+         abline (h = 0, col = "blue")
+         ## PLOT
+         ##plot (mat.gsa.pair[[onto]][["N"]], mat.gsa.pair[[onto]][["lor"]][,tag], xlab = "block size", ylab = "lor", main = paste (onto, tag, sep = " : "))
+         ##plot (log (mat.gsa.pair[[onto]][["N"]]), mat.gsa.pair[[onto]][["lor"]][,tag], xlab = "block size", ylab = "lor", main = paste (onto, tag, sep = " : "))
+         ##plot (log (mat.gsa.pair[[onto]][["N"]]), mat.gsa.pair[[onto]][["pval"]][,tag], xlab = "block size", ylab = "pval", main = paste (onto, tag, sep = " : "))
+         ##plot (log (mat.gsa.pair[[onto]][["N"]]), - log (mat.gsa.pair[[onto]][["pval"]][,tag]), xlab = "block size", ylab = "- log pval", main = paste (onto, tag, sep = " : "))
+         ##plot (mat.gsa.pair[[onto]][["N"]], mat.gsa.pair[[onto]][["index"]][,tag], xlab = "block size", ylab = "index", main = paste (onto, tag, sep = " : "))
+     }
+     dev.off ()
+ }
[1] "blca"
[1] "brca"
[1] "cesc"
[1] "esca"
[1] "hnsc"
[1] "kich"
[1] "kirc"
[1] "kirp"
[1] "lihc"
[1] "luad"
[1] "lusc"
[1] "paad"
[1] "pcpg"
[1] "prad"
[1] "stad"
[1] "thca"
[1] "ucec"
> 
> 
> ## GO INHIBITION CORRELATION
> por <- 2
> for (onto in ontologias) {
+     print (onto)
+     ##
+     fichero.png <- paste0 ("paired_cor_", onto, ".png")
+     png (fichero.png, width = por * 480, height = por * 480, pointsize = 12, bg = "white")
+     plotcorr (cor (mat.gsa.pair[[onto]][["index"]]), main = paste (toupper (onto), "inhibition effect correlation"))
+     dev.off ()
+     ##
+     fichero.png <- paste0 ("paired_dist_of_cor", onto, ".png")
+     png (fichero.png, width = por * 480, height = por * 480, pointsize = 12 * 2, bg = "white")
+     boxplot (cor (mat.gsa.pair[[onto]][["index"]]), las = 3, main = paste (toupper (onto), "inhibition effect correlation distribution"))
+     abline (h = 0, col = "blue")
+     dev.off ()
+ }
[1] "bp"
[1] "cc"
[1] "mf"
> 
> 
> png ("paired_inhibition_effect_correlation_across_ontologies.png", width = por * 480 * 3, height = por * 480, pointsize = 12, bg = "white")
> par (mfrow = c(1, 3))
> plot (cor (mat.gsa.pair[["bp"]][["index"]]), cor (mat.gsa.pair[["cc"]][["index"]]))
> abline (0, 1, col = "blue")
> plot (cor (mat.gsa.pair[["bp"]][["index"]]), cor (mat.gsa.pair[["mf"]][["index"]]))
> abline (0, 1, col = "blue")
> plot (cor (mat.gsa.pair[["mf"]][["index"]]), cor (mat.gsa.pair[["cc"]][["index"]]))
> abline (0, 1, col = "blue")
> dev.off ()
null device 
          1 
> 
> 
> ###EXIT
> warnings ()
NULL
> sessionInfo ()
R version 3.1.2 (2014-10-31)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=es_ES.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=es_ES.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=es_ES.UTF-8       LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=es_ES.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] ellipse_0.3-8        mdgsa_0.99.2         AnnotationDbi_1.28.1 GenomeInfoDb_1.2.3   IRanges_2.0.0        S4Vectors_0.4.0      Biobase_2.26.0      
 [8] BiocGenerics_0.12.1  RSQLite_1.0.0        DBI_0.3.1           

loaded via a namespace (and not attached):
[1] cluster_2.0.1   GO.db_3.0.0     grid_3.1.2      KEGG.db_3.0.0   lattice_0.20-29 Matrix_1.1-5   
> q ("no")
> proc.time()
   user  system elapsed 
 10.457   0.099  10.548 
